name: Build and Release Felux ISO

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ARCH: x86_64
  IMAGE_NAME: felux
  IMAGE_REPO: ghcr.io/reisaraujo-miguel
  IMAGE_TAG: latest
  VERSION: "40"
  VARIANT: Kinoite

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # This is required for creating releases

    steps:
    - uses: actions/checkout@v4

    - name: Build ISO
      uses: jasonn3/build-container-installer@v1.2.2
      id: build
      with:
        arch: ${{ env.ARCH }}
        image_name: ${{ env.IMAGE_NAME }}
        image_repo: ${{ env.IMAGE_REPO }}
        image_tag: ${{ env.IMAGE_TAG }}
        version: ${{ env.VERSION }}
        variant: ${{ env.VARIANT }}
        iso_name: ${{ env.IMAGE_NAME }}-${{ env.IMAGE_TAG }}.iso
        enable_cache_dnf: "true"
        enable_cache_skopeo: "false"
        enable_flatpak_dependencies: "true"
        enrollment_password: "container-installer"
        flatpak_remote_name: "flathub"
        flatpak_remote_url: "https://flathub.org/repo/flathub.flatpakrepo"
        image_signed: "true"
        rootfs_size: "2"
        web_ui: "false"

    - name: Debug Output
      if: always()
      run: |
        echo "Build step outcome: ${{ steps.build.outcome }}"
        echo "Build step outputs:"
        echo "${{ toJson(steps.build.outputs) }}"

    - name: Check build status
      if: steps.build.outcome != 'success'
      run: |
        echo "ISO build failed. Please check the logs for more information."
        exit 1

    - name: Get ISO version
      id: iso_version
      run: |
        ISO_VERSION=$(date +"%Y%m%d")
        echo "version=$ISO_VERSION" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: success()
      with:
        tag_name: v${{ steps.iso_version.outputs.version }}
        name: Felux ISO v${{ steps.iso_version.outputs.version }}
        draft: false
        prerelease: false
        files: |
          ${{ github.workspace }}/${{ steps.build.outputs.iso_name }}
          ${{ github.workspace }}/${{ steps.build.outputs.iso_name }}-CHECKSUM
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
