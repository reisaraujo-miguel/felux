---
name: build-iso

on:
  workflow_run:
    workflows: ["build-image"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

env:
  ARCH: x86_64
  IMAGE_NAME: felux
  IMAGE_REPO: ghcr.io/reisaraujo-miguel
  IMAGE_TAG: latest
  VERSION: "40"
  VARIANT: Kinoite

jobs:
  build:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       github.event.workflow_run.event != 'schedule')
    permissions:
      contents: write
      actions: read

    steps:
    - uses: actions/checkout@v4
    
    - name: Get ISO version
      id: iso_version
      run: |
        ISO_VERSION=$(date +"%Y%m%d")
        echo "version=$ISO_VERSION" >> $GITHUB_OUTPUT
    
    - name: Build ISO
      uses: jasonn3/build-container-installer@main
      id: build
      with:
        arch: ${{ env.ARCH }}
        image_name: ${{ env.IMAGE_NAME }}
        image_repo: ${{ env.IMAGE_REPO }}
        image_tag: ${{ env.IMAGE_TAG }}
        version: ${{ env.VERSION }}
        variant: ${{ env.VARIANT }}
        iso_name: ${{ env.IMAGE_NAME }}-v${{ steps.iso_version.outputs.version }}.iso

    - name: Upload ISO as artifact
      uses: actions/upload-artifact@v4
      with:
        name: felux-v${{ steps.iso_version.outputs.version }}
        path: ${{ github.workspace }}/${{ steps.build.outputs.iso_name }}
        if-no-files-found: error

    - name: Get Artifact URL
      id: get_artifact_url
      run: |
        ARTIFACT_ID=$(curl -sL \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" \
          | jq '.artifacts[] | select(.name=="felux-v${{ steps.iso_version.outputs.version }}") | .id')
        
        ARTIFACT_URL="https://github.com/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/felux-v${{ steps.iso_version.outputs.version }}"
        echo "artifact_url=$ARTIFACT_URL" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      if: success()
      with:
        tag_name: v${{ steps.iso_version.outputs.version }}
        name: Felux ISO v${{ steps.iso_version.outputs.version }}
        body: |
          Felux ISO v${{ steps.iso_version.outputs.version }} (Based on Fedora ${{ env.VERSION }})
          
          The ISO file is available as a GitHub Actions artifact due to file size limitations.
          
          [Download ISO Artifact](${{ steps.get_artifact_url.outputs.artifact_url }})
          
          Note: You need to be logged in to GitHub to download the artifact.
          
          Checksum file is attached to this release.
          
          ISO Filename: ${{ steps.build.outputs.iso_name }}
        draft: false
        prerelease: false
        files: |
          ${{ github.workspace }}/${{ steps.build.outputs.iso_name }}-CHECKSUM
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
