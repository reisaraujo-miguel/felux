---
name: Build Release ISO

on:
  workflow_run:
    workflows: ["Build Main Image"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:

env:
  ARCH: x86_64
  IMAGE_NAME: felux
  IMAGE_REPO: ghcr.io/reisaraujo-miguel
  IMAGE_TAG: latest
  VERSION: "41"
  VARIANT: Kinoite

jobs:
  build:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       github.event.workflow_run.event != 'schedule')
    permissions:
      contents: write
      actions: read

    steps:
      - uses: actions/checkout@v4

      - name: Get Release Version
        id: get_version
        run: |
          echo "release_ver=$(cat ./version.txt)" >> $GITHUB_ENV

      - name: Get ISO Build Date
        id: iso_build_date
        run: |
          ISO_BUILD_DATE="$(date +"%Y%m%d")"
          echo "date=$ISO_BUILD_DATE" >> "$GITHUB_OUTPUT"

      - name: Build ISO
        uses: jasonn3/build-container-installer@a1ce6da2d6c1af0561bec053366d0f3aa7e38743
        id: build
        with:
          arch: ${{ env.ARCH }}
          image_name: ${{ env.IMAGE_NAME }}
          image_repo: ${{ env.IMAGE_REPO }}
          image_tag: ${{ env.IMAGE_TAG }}
          version: ${{ env.VERSION }}
          variant: ${{ env.VARIANT }}
          secure_boot_key_url: https://github.com/ublue-os/akmods/raw/main/certs/public_key.der
          enrollment_password: universalblue
          enable_cache_dnf: false
          enable_cache_skopeo: false
          iso_name: ${{ env.IMAGE_NAME }}-${{ env.release_ver }}-${{ steps.iso_build_date.outputs.date }}.iso
          flatpak_remote_name: flathub
          flatpak_remote_url: https://flathub.org/repo/flathub.flatpakrepo
          flatpak_remote_refs_dir: /github/workspace/flatpak_refs

      - name: Upload ISO as artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.iso_name }}
          path: |
            ${{ steps.build.outputs.iso_path }}/${{ steps.build.outputs.iso_name }}
          if-no-files-found: error
          compression-level: 0

      - name: Get Artifact URL
        id: get_iso_artifact
        run: |
          artifacts=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts")
          iso_url=$(echo "$artifacts" | jq -r '.artifacts[0].archive_download_url')
          echo "iso_url=$iso_url" >> $GITHUB_ENV

      - name: Generate Changelog
        run: |
          go install github.com/git-chglog/git-chglog/cmd/git-chglog@v0.15.4

          git-chglog --next-tag v${{ env.release_ver }} v${{ env.release_ver }} -o CHANGELOG.md

          echo "changelog=$(cat CHANGELOG.md)" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8
        if: success() && github.ref == 'refs/heads/main'
        with:
          tag_name: v${{ env.release_ver }}
          name: Felux ${{ env.release_ver }}
          body: |
            ${{ env.changelog }}

            ---

            Felux ${{ env.release_ver }} (Based on Fedora ${{ env.VERSION }})

            The ISO file is available as a GitHub Actions artifact due to file size limitations.

            [Download ${{ steps.build.outputs.iso_name }}](${{ env.iso_url }})

            Note: You need to be logged in to GitHub to download the artifact.
          draft: false
          prerelease: false
          files: |
            ${{ steps.build.outputs.iso_path }}/${{ steps.build.outputs.iso_name }}-CHECKSUM
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
