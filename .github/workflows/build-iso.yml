name: Build and Release Felux ISO

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ARCH: x86_64
  IMAGE_NAME: felux
  IMAGE_REPO: ghcr.io/reisaraujo-miguel
  IMAGE_TAG: latest
  VERSION: latest
  VARIANT: Kinoite

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build ISO
      uses: jasonn3/build-container-installer@v1.2.2
      id: build
      continue-on-error: true  # This allows the workflow to continue even if this step fails
      with:
        arch: ${{ env.ARCH }}
        image_name: ${{ env.IMAGE_NAME }}
        image_repo: ${{ env.IMAGE_REPO }}
        image_tag: ${{ env.IMAGE_TAG }}
        version: ${{ env.VERSION }}
        variant: ${{ env.VARIANT }}
        iso_name: ${{ env.IMAGE_NAME }}-${{ env.IMAGE_TAG }}-${{ env.VERSION }}.iso
        enable_cache_dnf: true
        enable_cache_skopeo: false
        enable_flatpak_dependencies: true
        enrollment_password: container-installer
        flatpak_remote_name: flathub
        flatpak_remote_url: https://flathub.org/repo/flathub.flatpakrepo
        image_signed: true
        rootfs_size: 2
        web_ui: false

    - name: Check build status
      if: steps.build.outcome == 'failure'
      run: |
        echo "ISO build failed. Please check the logs for more information."
        exit 1

    - name: Get ISO version
      id: iso_version
      run: |
        ISO_VERSION=$(date +"%Y%m%d")
        echo "version=$ISO_VERSION" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.iso_version.outputs.version }}
        release_name: Felux ISO v${{ steps.iso_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload ISO
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.build.outputs.iso_path }}
        asset_name: ${{ steps.build.outputs.iso_name }}
        asset_content_type: application/octet-stream

    - name: Upload ISO Checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.build.outputs.iso_path }}-CHECKSUM
        asset_name: ${{ steps.build.outputs.iso_name }}-CHECKSUM
        asset_content_type: text/plain
